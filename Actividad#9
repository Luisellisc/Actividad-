import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Validadorpas {
    private static final int NUM_THREADS = 3;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ExecutorService executorService = Executors.newFixedThreadPool(NUM_THREADS);
        AtomicInteger validPasswordsCount = new AtomicInteger(0);
        System.out.println("Bienvenido, aqui podras comprobar si las contasenas que quieras son validas ");
        for (int i = 0; i < NUM_THREADS; i++) {
            System.out.println("Ingrese la contraseña con estas condiciones:Longitud mínima de 8 caracteres, presencia de caracteres especiales, al menos 2 mayúsculas,\n" +
                    " al menos 3 minúsculas, y al menos 1 número.#" + (i + 1) + ":");
            String password = scanner.nextLine();
            executorService.submit(() -> {
                if (validatePassword(password)) {
                    System.out.println(Thread.currentThread().getName() + ": Contraseña válida.");
                    validPasswordsCount.incrementAndGet();
                } else {
                    System.out.println(Thread.currentThread().getName() + ": Contraseña inválida.");
                }
            });
        }

        executorService.shutdown();
        while (!executorService.isTerminated()) {
            // Esperar a que todos los hilos finalicen
        }

        System.out.println("Total de contraseñas válidas: " + validPasswordsCount.get());
    }

    private static boolean validatePassword(String password) {
        

        String regex = "^(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?])(?=.*[A-Z].*[A-Z])(?=.*[a-z].*[a-z].*[a-z])(?=.*\\d).{8,}$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(password);
        return matcher.matches();
    }
}
